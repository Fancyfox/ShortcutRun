{
  "code": "import { CharactorManager } from \"../../Data/CharactorManager\";\r\nimport { Configuration } from \"../../Data/Configuration\";\r\nimport { Constants } from \"../../Data/Constants\";\r\nimport { StaticDataManager } from \"../../Tmpl/StaticDataManager\";\r\nimport EventManager from \"./EventManager\";\r\nimport { EventName } from \"./GameDefine\";\r\nexport class ShopManager {\r\n    constructor() {\r\n        this._unlockIDMap = new Map();\r\n        this._unlockIDSaveList = [];\r\n    }\r\n    static instance() {\r\n        if (!this._instance) {\r\n            this._instance = new ShopManager();\r\n        }\r\n        return this._instance;\r\n    }\r\n    loadFromCache() {\r\n        const shopInfo = Configuration.instance().getConfigData(Constants.ShopInfoID);\r\n        if (shopInfo) {\r\n            this._unlockIDSaveList = JSON.parse(shopInfo);\r\n        }\r\n        else {\r\n            this._unlockIDSaveList.push(\"1001\");\r\n            this._unPlankChooseID = \"1001\";\r\n        }\r\n        for (let i = 0; i < this._unlockIDSaveList.length; i++) {\r\n            if (!this._unlockIDMap.has(this._unlockIDSaveList[i])) {\r\n                this._unlockIDMap.set(this._unlockIDSaveList[i], true);\r\n            }\r\n        }\r\n    }\r\n    _savePlankListToCache() {\r\n        const data = JSON.stringify(this._unlockIDSaveList);\r\n        Configuration.instance().setConfigData(Constants.ShopInfoID, data);\r\n    }\r\n    _savePlankChooseID(id) {\r\n        this._unPlankChooseID = id;\r\n        Configuration.instance().setConfigData(Constants.PlankChooseID, this._unPlankChooseID);\r\n    }\r\n    isAllPlankUnlock() {\r\n        return this._unlockIDSaveList.length >= Constants.MaxPlankSkin;\r\n    }\r\n    unlockPlankByMoney() {\r\n        let unlockMoney = 0;\r\n        this._unlockIDSaveList.length * 500;\r\n        if (CharactorManager.instance().reduceMoney(unlockMoney)) {\r\n            let lockList = this.getLockIDList();\r\n            let ranIndex = Math.floor(Math.random() * lockList.length);\r\n            console.log(this._unlockIDMap, \"unlock map\");\r\n            this.unlockPlank(lockList[ranIndex]);\r\n            EventManager.dispatchEvent(EventName.SHOP_PLANK_BUY, lockList[ranIndex]);\r\n        }\r\n    }\r\n    hasUnlock(id) {\r\n        return this._unlockIDMap.has(id);\r\n    }\r\n    unlockPlank(id) {\r\n        if (!this._unlockIDMap.has(id)) {\r\n            this._unlockIDSaveList.push(id);\r\n            this._unlockIDMap.set(id, true);\r\n            this._savePlankListToCache();\r\n            this._savePlankChooseID(id);\r\n        }\r\n    }\r\n    choosePlank(id) {\r\n        if (!this._unlockIDMap.has(id)) {\r\n            return;\r\n        }\r\n        this._savePlankChooseID(id);\r\n        EventManager.dispatchEvent(EventName.SHOP_PLANK_CHOOSE, id);\r\n    }\r\n    getChoosePlankID() {\r\n        return this._unPlankChooseID;\r\n    }\r\n    getLockIDList() {\r\n        let tmpls = StaticDataManager.getPlanksRecord();\r\n        let lockList = [];\r\n        for (let key in tmpls) {\r\n            if (!this._unlockIDMap.has(tmpls[key])) {\r\n                lockList.push(key);\r\n            }\r\n        }\r\n        console.log(lockList, \"lockList\");\r\n        return lockList;\r\n    }\r\n}\r\nShopManager._instance = null;\r\n",
  "references": [
    "D:/WorkSpace/Laya2.6.1/ShortcutRun/src/Data/CharactorManager.ts",
    "D:/WorkSpace/Laya2.6.1/ShortcutRun/src/Data/Configuration.ts",
    "D:/WorkSpace/Laya2.6.1/ShortcutRun/src/Data/Constants.ts",
    "D:/WorkSpace/Laya2.6.1/ShortcutRun/src/Tmpl/StaticDataManager.ts",
    "D:/WorkSpace/Laya2.6.1/ShortcutRun/src/script/Singleton/EventManager.ts",
    "D:/WorkSpace/Laya2.6.1/ShortcutRun/src/script/Singleton/GameDefine.ts"
  ]
}
