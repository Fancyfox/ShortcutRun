{
  "code": "import GameDefine from \"./GameDefine\";\r\nexport default class Pool {\r\n    constructor() {\r\n        this.plankHand_array = [];\r\n        this.plankRoad_array = [];\r\n        this.effect_map = new Map();\r\n        this.cube_scale = new Laya.Vector3(1, 1, 1);\r\n    }\r\n    static get instance() {\r\n        if (!this._instance)\r\n            this._instance = new Pool();\r\n        return this._instance;\r\n    }\r\n    static Spawn(name, parent, pos) {\r\n        let obj;\r\n        if (this.handle.has(name) && this.handle.get(name).length > 0) {\r\n            obj = this.handle.get(name).pop();\r\n            parent.addChild(obj);\r\n        }\r\n        else {\r\n            let prefab = Laya.loader.getRes(GameDefine.prefabRoot + name + \".lh\");\r\n            obj = Laya.Sprite3D.instantiate(prefab, parent, true);\r\n        }\r\n        obj.transform.position = pos;\r\n        obj.active = true;\r\n        return obj;\r\n    }\r\n    static RecycleObj(target, name) {\r\n        target.removeSelf();\r\n        if (this.handle.has(name)) {\r\n            this.handle.get(name).push(target);\r\n        }\r\n        else {\r\n            let pool = [];\r\n            pool.push(target);\r\n            this.handle.set(name, pool);\r\n        }\r\n    }\r\n    getPlank_hand(parent, pos) {\r\n        let cube;\r\n        if (this.plankHand_array.length <= 0) {\r\n            let prefab = Laya.loader.getRes(GameDefine.prefabRoot + \"plank_hand.lh\");\r\n            cube = Laya.Sprite3D.instantiate(prefab, parent, true);\r\n        }\r\n        else {\r\n            cube = this.plankHand_array.pop();\r\n            parent.addChild(cube);\r\n        }\r\n        cube.transform.position = pos;\r\n        cube.active = true;\r\n        return cube;\r\n    }\r\n    getPlank_road(parent, pos) {\r\n        let cube;\r\n        if (this.plankRoad_array.length <= 0) {\r\n            let prefab = Laya.loader.getRes(GameDefine.prefabRoot + \"plank_road.lh\");\r\n            cube = Laya.Sprite3D.instantiate(prefab, parent, true);\r\n        }\r\n        else {\r\n            cube = this.plankRoad_array.pop();\r\n            parent.addChild(cube);\r\n        }\r\n        cube.transform.position = pos;\r\n        cube.active = true;\r\n        return cube;\r\n    }\r\n    reversePlankHandCube(cube) {\r\n        cube.active = false;\r\n        cube.removeSelf();\r\n        this.plankHand_array.push(cube);\r\n    }\r\n    reversePlankRoadCube(cube) {\r\n        cube.active = false;\r\n        cube.removeSelf();\r\n        this.plankRoad_array.push(cube);\r\n    }\r\n    clearPool() {\r\n        let len1 = this.plankRoad_array.length;\r\n        for (let i = 0; i < len1; i++) {\r\n            let cube = this.plankRoad_array.pop();\r\n            if (cube) {\r\n                cube.removeSelf();\r\n                cube.destroy();\r\n            }\r\n        }\r\n        let len2 = this.plankHand_array.length;\r\n        for (let i = 0; i < len2; i++) {\r\n            let cube = this.plankHand_array.pop();\r\n            if (cube) {\r\n                cube.removeSelf();\r\n                cube.destroy();\r\n            }\r\n        }\r\n        this.plankHand_array.length = 0;\r\n        this.plankRoad_array.length = 0;\r\n        ;\r\n    }\r\n    static getCoin(coinPrefab, parent) {\r\n        var obj = null;\r\n        if (this.coinPool.length > 0) {\r\n            obj = this.coinPool.pop();\r\n        }\r\n        else {\r\n            obj = coinPrefab.create();\r\n        }\r\n        parent.addChild(obj);\r\n        return obj;\r\n    }\r\n    static putCoin(obj) {\r\n        Laya.Tween.clearAll(obj);\r\n        obj.removeSelf();\r\n        this.coinPool.push(obj);\r\n    }\r\n}\r\nPool.handle = new Map();\r\nPool.coinPool = [];\r\n",
  "references": [
    "D:/WorkSpace/Laya2.6.1/ShortcutRun/src/script/Singleton/GameDefine.ts"
  ]
}
